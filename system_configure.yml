- name: Configure dnf
  hosts: localhost
  tasks:
    - name: Copy dnf config
      become: true
      ansible.builtin.copy:
        src: ./dnf.conf
        dest: /etc/dnf/dnf.conf

- name: Update packages
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Update installed Packages
      become: true
      ansible.builtin.dnf:
        name: '*'
        state: latest

- name: Remove Gnome
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Gather package facts to see if gnome is installed
      ansible.builtin.package_facts:
        manager: auto
    - name: Remove gnome-shell from protected packages
      become: true
      when: "'gnome-shell' in ansible_facts.packages"
      ansible.builtin.lineinfile:
        path: /etc/dnf/protected.d/fedora-workstation.conf
        search_string: "gnome-shell"
        state: absent
    - name: Remove all gnome packages
      become: true
      when: "'gnome-shell' in ansible_facts.packages"
      ansible.builtin.dnf:
        name: '*gnome*'
        state: absent

- name: Cleanup Packages
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Cleanup system by removing unwanted packages
      become: true
      ansible.builtin.dnf:
        name:
          - ghostscript
          - "PackageKit*"
          - "*rygel*"
          - baobab
          - simple-scan
          - mediawriter
          - sd
          - "malcontent*"
          - switcheroo-control 
          - "onboard*"
          - rhythmbox
          - Box2D
          - antiword
          - "anaconda*"
          - "blivet*"
          - dmenu
          - genisoimage
          - rxvt-unicode 
        state: absent

- name: Install important software
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Install packages
      become: true
      ansible.builtin.dnf:
        name:
          - clang
          - gh
          - git
        state: present
    - name: Install OpenH264
      become: true
      ansible.builtin.dnf:
        name:
          - ffmpeg-free
          - gstreamer1-plugin-openh264
          - mozilla-openh264
        state: present

- name: Install DisplayManager
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Install lightdm
      become: true
      ansible.builtin.dnf:
        name:
          - lightdm
          - light-locker
          - slick-greeter
        state: present

- name: Setup window manager
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Gather package facts to see if i3 is already installed
      ansible.builtin.package_facts:
        manager: auto
    - name: Install i3 window manager, polybar and rofi
      become: true
      when: "'i3' not in ansible_facts.packages"
      register: wm
      ansible.builtin.dnf:
        name: 
          - i3
          - polybar
          - rofi
        state: present
    - name: Copy i3 config
      when: wm.changed
      ansible.builtin.copy:
        src: ./i3
        dest: ~/.config/
        mode: preserve
    - name: Copy polybar config
      when: wm.changed
      ansible.builtin.copy:
        src: ./polybar
        dest: ~/.config/
    - name: Copy rofi config
      when: wm.changed
      ansible.builtin.copy:
        src: ./rofi
        dest: ~/.config/

- name: Install nerd font
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Create font directory
      become: true
      register: monaspace
      ansible.builtin.file:
        path: /usr/share/fonts/Monaspace
        state: directory
    - name: Download and unpack font
      become: true
      when: monaspace.changed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/Monaspace.zip
        dest: /usr/share/fonts/Monaspace
        remote_src: true
    - name: Create font directory
      become: true
      register: ubuntumono
      ansible.builtin.file:
        path: /usr/share/fonts/UbuntuMono
        state: directory
    - name: Download and unpack font
      become: true
      when: ubuntumono.changed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/UbuntuMono.zip
        dest: /usr/share/fonts/Monaspace
        remote_src: true
    - name: Create font directory
      become: true
      register: ubuntu
      ansible.builtin.file:
        path: /usr/share/fonts/Ubuntu
        state: directory
    - name: Download and unpack font
      become: true
      when: ubuntu.changed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/Ubuntu.zip
        dest: /usr/share/fonts/Monaspace
        remote_src: true

- name: Setup terminal emulator
  hosts: localhost
  gather_facts: false
  tasks: 
    - name: Install kitty terminal
      become: true
      register: terminal
      ansible.builtin.dnf:
        name: kitty
        state: present
    - name: Copy kitty config
      when: terminal.changed
      ansible.builtin.copy:
        src: ./kitty.conf
        dest: ~/.config/kitty/

- name: Setup terminal multiplexer
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Enable zellij copr
      become: true
      community.general.copr:
        name: varlad/zellij
        state: enabled
    - name: Install zellij
      become: true
      register: zellij
      ansible.builtin.dnf:
        name: zellij
        state: present
    - name: Create config directory
      when: zellij.changed
      ansible.builtin.file:
        path: ~/.config/zellij
        state: directory
    - name: Copy zellij config
      when: zellij.changed
      ansible.builtin.copy:
        src: ./zellij.kdl
        dest: ~/.config/zellij/config.kdl

- name: Setup neovim
  hosts: localhost
  gather_facts: false
  tasks: 
    - name: Install neovim
      become: true
      register: nvim
      ansible.builtin.dnf:
        name: neovim
        state: present
    - name: Install plugin dependecies
      become: true
      when: nvim.changed
      ansible.builtin.dnf:
        name:
          - fzf
          - ripgrep
          - fd-find
        state: present
    - name: Copy neovim config
      when: nvim.changed
      ansible.builtin.copy:
        src: ./nvim
        dest: ~/.config/

- name: Setup zsh
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Install zsh
      become: true
      register: zsh
      ansible.builtin.dnf:
        name: zsh
        state: present
    - name: Change user shell
      become: true
      when: zsh.changed
      ansible.builtin.user:
        user: "{{ ansible_user_id }}"
        shell: /bin/zsh
    - name: Download starship install script
      when: zsh.changed
      ansible.builtin.get_url:
        url: https://starship.rs/install.sh
        dest: ~/install.sh
        mode: "0777"
    - name: Run starship install
      when: zsh.changed
      become: true
      ansible.builtin.command:
        cmd: /home/"{{ ansible_user_id }}"/install.sh -y
    - name: Remove install script
      when: zsh.changed
      ansible.builtin.file:
        name: ~/install.sh
        state: absent
    - name: Copy starship config
      when: zsh.changed
      ansible.builtin.copy:
        src: ./starship.toml
        dest: ~/.config/starship.toml
    - name: Copy zsh config
      when: zsh.changed
      ansible.builtin.copy:
        src: ./.zshrc
        dest: ~/.zshrc

- name: Install mdatp
  hosts: localhost
  gather_facts: false
  tasks:
    - name: add microsoft repo
      become: true
      ansible.builtin.yum_repository:
        name: microsoft-packages
        description: Microsofts dirty packages
        baseurl: https://packages.microsoft.com/yumrepos/microsoft-fedora39-prod/
    - name: Add microsoft gpg key
      become: true
      ansible.builtin.rpm_key:
        key: https://packages.microsoft.com/keys/microsoft.asc
        state: present
    - name: Install mdatp
      become: true
      ansible.builtin.dnf:
        name: mdatp
        state: latest
- name: Install Microsoft Teams Flaptpak
  hosts: localhost
  tasks:
    - name: Install flatpak
      become: true
      ansible.builtin.dnf:
        name: flatpak
        state: present
    - name: Enable flathub remote
      become: true
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    - name: Install MSTeams
      become: true
      community.general.flatpak:
        name: https://dl.flathub.org/repo/appstream/com.github.IsmaelMartinez.teams_for_linux.flatpakref
        state: present
